@model List<TopMatchViewModel>
@using Microsoft.AspNetCore.Identity
@using FreelancePlatform.Models

@inject SignInManager<ApplicationUser> SignInManager

@section Styles {
    <style>
        .match-card {
            border: 1px solid #ddd;
            border-radius: 16px;
            padding: 24px;
            background-color: #f9f9fb;
            box-shadow: 0 4px 16px rgba(0,0,0,0.08);
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            height: 100%;
            width: 100%;
            position: relative;
            transition: transform 0.2s;
        }

            .match-card:hover {
                transform: translateY(-4px);
            }

        .match-title {
            font-size: 2rem;
            font-weight: 600;
            margin-bottom: 12px;
            color: #333;
        }

        .match-info {
            margin-bottom: 10px;
            font-size: 1.2rem;
        }

        .badge-skill {
            background-color: #e0e7ff;
            color: #3730a3;
            padding: 5px 10px;
            border-radius: 12px;
            margin-right: 6px;
            margin-top: 6px;
            display: inline-block;
            font-size: 1.1rem;
        }

        .apply-btn {
            background-color: #4f46e5;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 10px;
            text-decoration: none;
            font-weight: 500;
            transition: background-color 0.2s ease-in-out;
        }

            .apply-btn:hover {
                background-color: #4338ca;
                color: white;
            }

        .pagination > li > a,
        .pagination > li > span {
            color: #4f46e5;
        }

        .pagination > .active > a {
            background-color: #4f46e5;
            border-color: #4f46e5;
            color: white;
        }

        .card-grid {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }

        .card-col {
            flex: 1 1 calc(33.333% - 20px);
            display: flex;
        }

        .card-item {
            width: 100%;
            display: flex;
            flex-direction: column;
        }

        @@media (max-width: 992px) {
            .card-col

        {
            flex: 1 1 calc(50% - 20px);
        }

        }

        @@media (max-width: 576px) {
            .card-col

        {
            flex: 1 1 100%;
        }

        }

        .description-preview {
            max-height: 100px;
            overflow: hidden;
            transition: max-height 0.3s ease;
        }

        .show-more {
            color: #4f46e5;
            cursor: pointer;
            display: inline-block;
            margin-top: 5px;
            font-size: 0.9rem;
        }
    </style>
}

<div class="container mt-5">
    <h2 class="mb-4 text-center">Top Matches</h2>

    <div class="row mb-4">
        <div class="col-md-12">
            <input type="text" id="searchInput" class="form-control mb-4" placeholder="Search job title or skills...">
        </div>
    </div>
    <br />
    <br />
    <div id="cardContainer" class="card-grid">
        @foreach (var match in Model)
        {
            <div class="card-col">
                <div class="match-card card-item">
                    <div>
                        <div class="match-title">@match.Title</div>
                        <div class="match-info">
                            <strong>Skills:</strong>
                            <div>
                                @foreach (var skill in match.Skills.Split(","))
                                {
                                    <span class="badge-skill">@skill.Trim()</span>
                                }
                            </div>
                        </div>
                        <div class="match-info"><strong>Duration:</strong> @string.Join(", ", match.Duration)</div>
                        <div class="match-info"><strong>Start Rate:</strong> @match.StartRate</div>
                        <div class="match-info"><strong>Similarity:</strong> @match.Similarity%</div>
                        <div class="match-info">
                            <strong>Description:</strong>
                            <div class="description-preview">@match.Description</div>
                            <span class="show-more">View More</span>
                        </div>
                    </div>
                    <div class="d-flex justify-content-end mt-3">
                        <a class="apply-btn" href="/Jobs/Apply/@match.Title">Apply</a>
                    </div>
                </div>
            </div>
        }
    </div>

    <nav class="mt-4">
        <ul id="paginationControls" class="pagination justify-content-center"></ul>
    </nav>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            const cardsPerPage = 6;
            const $cards = $(".card-item");
            const $pagination = $("#paginationControls");

            function showPage(page, filteredCards) {
                filteredCards = filteredCards || $cards;
                $cards.parent().hide();
                filteredCards.parent().hide();
                const start = (page - 1) * cardsPerPage;
                const end = start + cardsPerPage;
                filteredCards.slice(start, end).parent().fadeIn();

                $pagination.empty();
                const totalPages = Math.ceil(filteredCards.length / cardsPerPage);
                for (let i = 1; i <= totalPages; i++) {
                    $pagination.append(`<li class="page-item ${i === page ? 'active' : ''}"><a class="page-link" href="#">${i}</a></li>`);
                }

                $('html, body').animate({ scrollTop: $("#cardContainer").offset().top - 40 }, 400);
            }

            function applyFilters() {
                const query = $("#searchInput").val().toLowerCase();
                const filtered = $cards.filter(function () {
                    const title = $(this).find(".match-title").text().toLowerCase();
                    const skills = $(this).find(".match-info").eq(0).text().toLowerCase();
                    return title.includes(query) || skills.includes(query);
                });
                showPage(1, filtered);
            }

            $("#searchInput").on("input", applyFilters);
            $pagination.on("click", "a", function (e) {
                e.preventDefault();
                const selectedPage = parseInt($(this).text());
                const query = $("#searchInput").val().toLowerCase();
                const filtered = $cards.filter(function () {
                    const title = $(this).find(".match-title").text().toLowerCase();
                    const skills = $(this).find(".match-info").eq(0).text().toLowerCase();
                    return title.includes(query) || skills.includes(query);
                });
                showPage(selectedPage, filtered);
            });

            $(document).on("click", ".show-more", function () {
                const $preview = $(this).siblings(".description-preview");
                if ($preview.css("max-height") === "100px") {
                    $preview.css("max-height", "none");
                    $(this).text("Show Less");
                } else {
                    $preview.css("max-height", "100px");
                    $(this).text("View More");
                }
            });

            showPage(1);
        });
    </script>
}
